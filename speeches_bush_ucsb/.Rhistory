entries = rbind(entries, entry)
}
else{
entry[k-1, pars] = paste(pars[k-1], pars[k], sep = " ")
entry$comp = TRUE
}
cand_df = rep(cand, times = length(entries))
term_df = rep(term, times = length(entries))
pars_df = data.table(texts = entries$pars, candidate = cand_df, term = term_df, title = speech_title, comp = entries$comp)}
}
df = rbind(df, pars_df)
}
for(i in 1:length(folders)){
path =  paste0("/Users/yuchenluo/Desktop/Measure_RadicalDiscourse/", folders[i])
setwd(path)
all_files = list.files(pattern = "*.txt")
# speech_df = data.table(texts = character(), candidate = character(), term = character(), title = character() )
for (j in 1:length(all_files)){
t <- read_file(all_files[j]) # load file
cand = sub("-speech.*", "", all_files[j])
term = str_match(all_files[j], "speech-\\s*(.*?)\\s*-")[,2]
speech_title = all_files[j]
pars = strsplit(t, "\n")[[1]]
pars = pars[pars != ""] #delete empty paragraphs
pars = sapply(pars,function(x){gsub(" \\[[^][]*]", "", x)}) #delete everything in square brackets and the space before it
for (k in 1:length(pars)){
sents = unlist(tokenize_sentences(pars[k]))
entries = data.table(pars = character(), comp = logical())
if (length(sents) >2){
entry = cbind(pars = pars[k], comp = FALSE)
entries = rbind(entries, entry)
}
else if (k < length(pars)){
combined = paste(pars[k], pars[k +1], sep = " ")
k = k+1
entry = cbind(pars = combined, comp = TRUE)
entries = rbind(entries, entry)
}
else if(k> 1){
entry[k-1, pars] = paste(pars[k-1], pars[k], sep = " ")
entry$comp = TRUE
}
cand_df = rep(cand, times = length(entries))
term_df = rep(term, times = length(entries))
pars_df = data.table(texts = entries$pars, candidate = cand_df, term = term_df, title = speech_title, comp = entries$comp)}
}
df = rbind(df, pars_df)
}
for(i in 1:length(folders)){
path =  paste0("/Users/yuchenluo/Desktop/Measure_RadicalDiscourse/", folders[i])
setwd(path)
all_files = list.files(pattern = "*.txt")
# speech_df = data.table(texts = character(), candidate = character(), term = character(), title = character() )
for (j in 1:length(all_files)){
t <- read_file(all_files[j]) # load file
cand = sub("-speech.*", "", all_files[j])
term = str_match(all_files[j], "speech-\\s*(.*?)\\s*-")[,2]
speech_title = all_files[j]
pars = strsplit(t, "\n")[[1]]
pars = pars[pars != ""] #delete empty paragraphs
pars = sapply(pars,function(x){gsub(" \\[[^][]*]", "", x)}) #delete everything in square brackets and the space before it
for (k in 1:length(pars)){
sents = unlist(tokenize_sentences(pars[k]))
entries = data.table(pars = character(), comp = logical())
if (length(sents) >2){
entry = cbind(pars = pars[k], comp = FALSE)
entries = rbind(entries, entry)
}
else if (k < length(pars)){
combined = paste(pars[k], pars[k +1], sep = " ")
k = k+1
entry = cbind(pars = combined, comp = TRUE)
entries = rbind(entries, entry)
}
else if(k> 1){
entries[k-1, pars] = paste(pars[k-1], pars[k], sep = " ")
entry$comp = TRUE
}
cand_df = rep(cand, times = length(entries))
term_df = rep(term, times = length(entries))
pars_df = data.table(texts = entries$pars, candidate = cand_df, term = term_df, title = speech_title, comp = entries$comp)}
}
df = rbind(df, pars_df)
}
# loop through all folders to save each paragraph in the dataframe
df = data.table(texts = character(), candidate = character(), term = character(), title = character() , comp = logical())
for(i in 1:length(folders)){
path =  paste0("/Users/yuchenluo/Desktop/Measure_RadicalDiscourse/", folders[i])
setwd(path)
all_files = list.files(pattern = "*.txt")
# speech_df = data.table(texts = character(), candidate = character(), term = character(), title = character() )
for (j in 1:length(all_files)){
t <- read_file(all_files[j]) # load file
cand = sub("-speech.*", "", all_files[j])
term = str_match(all_files[j], "speech-\\s*(.*?)\\s*-")[,2]
speech_title = all_files[j]
pars = strsplit(t, "\n")[[1]]
pars = pars[pars != ""] #delete empty paragraphs
pars = sapply(pars,function(x){gsub(" \\[[^][]*]", "", x)}) #delete everything in square brackets and the space before it
for (k in 1:length(pars)){
sents = unlist(tokenize_sentences(pars[k]))
entries = data.table(pars = character(), comp = logical())
if (length(sents) >2){
entry = cbind(pars = pars[k], comp = FALSE)
entries = rbind(entries, entry)
}
else if (k < length(pars)){
combined = paste(pars[k], pars[k +1], sep = " ")
k = k+1
entry = cbind(pars = combined, comp = TRUE)
entries = rbind(entries, entry)
}
else if(k> 1){
entries[k-1, pars] = paste(pars[k-1], pars[k], sep = " ")
entries[k-1, comp] = TRUE
}
cand_df = rep(cand, times = length(entries))
term_df = rep(term, times = length(entries))
pars_df = data.table(texts = entries$pars, candidate = cand_df, term = term_df, title = speech_title, comp = entries$comp)}
}
df = rbind(df, pars_df)
}
for(i in 1:length(folders)){
path =  paste0("/Users/yuchenluo/Desktop/Measure_RadicalDiscourse/", folders[i])
setwd(path)
all_files = list.files(pattern = "*.txt")
# speech_df = data.table(texts = character(), candidate = character(), term = character(), title = character() )
for (j in 1:length(all_files)){
t <- read_file(all_files[j]) # load file
cand = sub("-speech.*", "", all_files[j])
term = str_match(all_files[j], "speech-\\s*(.*?)\\s*-")[,2]
speech_title = all_files[j]
pars = strsplit(t, "\n")[[1]]
pars = pars[pars != ""] #delete empty paragraphs
pars = sapply(pars,function(x){gsub(" \\[[^][]*]", "", x)}) #delete everything in square brackets and the space before it
for (k in 1:length(pars)){
sents = unlist(tokenize_sentences(pars[k]))
entries = data.table(pars = character(), comp = FALSE)
if (length(sents) >2){
entry = cbind(pars = pars[k], comp = FALSE)
entries = rbind(entries, entry)
}
else if (k < length(pars)){
combined = paste(pars[k], pars[k +1], sep = " ")
k = k+1
entry = cbind(pars = combined, comp = TRUE)
entries = rbind(entries, entry)
}
else if(k> 1){
entries[k-1, pars] = paste(pars[k-1], pars[k], sep = " ")
entries[k-1, comp] = TRUE
}
cand_df = rep(cand, times = length(entries))
term_df = rep(term, times = length(entries))
pars_df = data.table(texts = entries$pars, candidate = cand_df, term = term_df, title = speech_title, comp = entries$comp)}
}
df = rbind(df, pars_df)
}
View(entries)
View(entry)
View(entries)
View(entry)
View(entries)
for(i in 1:length(folders)){
path =  paste0("/Users/yuchenluo/Desktop/Measure_RadicalDiscourse/", folders[i])
setwd(path)
all_files = list.files(pattern = "*.txt")
# speech_df = data.table(texts = character(), candidate = character(), term = character(), title = character() )
for (j in 1:length(all_files)){
t <- read_file(all_files[j]) # load file
cand = sub("-speech.*", "", all_files[j])
term = str_match(all_files[j], "speech-\\s*(.*?)\\s*-")[,2]
speech_title = all_files[j]
pars = strsplit(t, "\n")[[1]]
pars = pars[pars != ""] #delete empty paragraphs
pars = sapply(pars,function(x){gsub(" \\[[^][]*]", "", x)}) #delete everything in square brackets and the space before it
for (k in 1:length(pars)){
sents = unlist(tokenize_sentences(pars[k]))
entries = data.table(pars = character(), comp = logical())
if (length(sents) >2){
entry = cbind(pars = pars[k], comp = FALSE)
entries = rbind(entries, entry)
print(entries)
}
else if (k < length(pars)){
combined = paste(pars[k], pars[k +1], sep = " ")
k = k+1
entry = cbind(pars = combined, comp = TRUE)
entries = rbind(entries, entry)
}
else if(k> 1){
entries[k-1, pars] = paste(pars[k-1], pars[k], sep = " ")
entries[k-1, comp] = TRUE
}
cand_df = rep(cand, times = length(entries))
term_df = rep(term, times = length(entries))
pars_df = data.table(texts = entries$pars, candidate = cand_df, term = term_df, title = speech_title, comp = entries$comp)}
}
df = rbind(df, pars_df)
}
for(i in 1:length(folders)){
path =  paste0("/Users/yuchenluo/Desktop/Measure_RadicalDiscourse/", folders[i])
setwd(path)
all_files = list.files(pattern = "*.txt")
# speech_df = data.table(texts = character(), candidate = character(), term = character(), title = character() )
for (j in 1:length(all_files)){
t <- read_file(all_files[j]) # load file
cand = sub("-speech.*", "", all_files[j])
term = str_match(all_files[j], "speech-\\s*(.*?)\\s*-")[,2]
speech_title = all_files[j]
pars = strsplit(t, "\n")[[1]]
pars = pars[pars != ""] #delete empty paragraphs
pars = sapply(pars,function(x){gsub(" \\[[^][]*]", "", x)}) #delete everything in square brackets and the space before it
for (k in 1:length(pars)){
sents = unlist(tokenize_sentences(pars[k]))
entries = data.table(pars = character(), comp = logical())
if (length(sents) >2){
entry = cbind(pars = pars[k], comp = FALSE)
entries = rbind(entries, entry)
print(entries)
}
else if (k < length(pars)){
combined = paste(pars[k], pars[k +1], sep = " ")
k = k+1
entry = cbind(pars = combined, comp = TRUE)
entries = rbind(entries, entry)
print(entries)
}
else if(k> 1){
entries[k-1, pars] = paste(pars[k-1], pars[k], sep = " ")
entries[k-1, comp] = TRUE
}
cand_df = rep(cand, times = length(entries))
term_df = rep(term, times = length(entries))
pars_df = data.table(texts = entries$pars, candidate = cand_df, term = term_df, title = speech_title, comp = entries$comp)}
}
df = rbind(df, pars_df)
}
for(i in 1:length(folders)){
path =  paste0("/Users/yuchenluo/Desktop/Measure_RadicalDiscourse/", folders[i])
setwd(path)
all_files = list.files(pattern = "*.txt")
# speech_df = data.table(texts = character(), candidate = character(), term = character(), title = character() )
for (j in 1:length(all_files)){
t <- read_file(all_files[j]) # load file
cand = sub("-speech.*", "", all_files[j])
term = str_match(all_files[j], "speech-\\s*(.*?)\\s*-")[,2]
speech_title = all_files[j]
pars = strsplit(t, "\n")[[1]]
pars = pars[pars != ""] #delete empty paragraphs
pars = sapply(pars,function(x){gsub(" \\[[^][]*]", "", x)}) #delete everything in square brackets and the space before it
for (k in 1:length(pars)){
sents = unlist(tokenize_sentences(pars[k]))
entries = data.table(pars = character(), comp = logical())
if (length(sents) >2){
entry = cbind(pars = pars[k], comp = FALSE)
entries = rbind(entries, entry)
print(entries)
}
else if (k < length(pars)){
combined = paste(pars[k], pars[k +1], sep = " ")
k = k+1
entry = cbind(pars = combined, comp = TRUE)
entries = rbind(entries, entry)
print(entry)
}
else if(k> 1){
entries[k-1, pars] = paste(pars[k-1], pars[k], sep = " ")
entries[k-1, comp] = TRUE
}
cand_df = rep(cand, times = length(entries))
term_df = rep(term, times = length(entries))
pars_df = data.table(texts = entries$pars, candidate = cand_df, term = term_df, title = speech_title, comp = entries$comp)}
}
df = rbind(df, pars_df)
}
print(TRUE)
for(i in 1:length(folders)){
path =  paste0("/Users/yuchenluo/Desktop/Measure_RadicalDiscourse/", folders[i])
setwd(path)
all_files = list.files(pattern = "*.txt")
# speech_df = data.table(texts = character(), candidate = character(), term = character(), title = character() )
for (j in 1:length(all_files)){
t <- read_file(all_files[j]) # load file
cand = sub("-speech.*", "", all_files[j])
term = str_match(all_files[j], "speech-\\s*(.*?)\\s*-")[,2]
speech_title = all_files[j]
pars = strsplit(t, "\n")[[1]]
pars = pars[pars != ""] #delete empty paragraphs
pars = sapply(pars,function(x){gsub(" \\[[^][]*]", "", x)}) #delete everything in square brackets and the space before it
for (k in 1:length(pars)){
sents = unlist(tokenize_sentences(pars[k]))
entries = data.table(pars = character(), comp = character())
if (length(sents) >2){
entry = cbind(pars = pars[k], comp = "FALSE")
entries = rbind(entries, entry)
print(entries)
}
else if (k < length(pars)){
combined = paste(pars[k], pars[k +1], sep = " ")
k = k+1
entry = cbind(pars = combined, comp = "TRUE")
entries = rbind(entries, entry)
print(entry)
}
else if(k> 1){
entries[k-1, pars] = paste(pars[k-1], pars[k], sep = " ")
entries[k-1, comp] = "TRUE"
}
cand_df = rep(cand, times = length(entries))
term_df = rep(term, times = length(entries))
pars_df = data.table(texts = entries$pars, candidate = cand_df, term = term_df, title = speech_title, comp = entries$comp)}
}
df = rbind(df, pars_df)
}
for(i in 1:length(folders)){
path =  paste0("/Users/yuchenluo/Desktop/Measure_RadicalDiscourse/", folders[i])
setwd(path)
all_files = list.files(pattern = "*.txt")
# speech_df = data.table(texts = character(), candidate = character(), term = character(), title = character() )
for (j in 1:length(all_files)){
t <- read_file(all_files[j]) # load file
cand = sub("-speech.*", "", all_files[j])
term = str_match(all_files[j], "speech-\\s*(.*?)\\s*-")[,2]
speech_title = all_files[j]
pars = strsplit(t, "\n")[[1]]
pars = pars[pars != ""] #delete empty paragraphs
pars = sapply(pars,function(x){gsub(" \\[[^][]*]", "", x)}) #delete everything in square brackets and the space before it
for (k in 1:length(pars)){
sents = unlist(tokenize_sentences(pars[k]))
entries = data.table(pars = character(), comp = character())
if (length(sents) >2){
entry = cbind(pars = pars[k], comp = "FALSE")
entries = rbind(entries, entry)
print(entries)
}
else if (k < length(pars)){
combined = paste(pars[k], pars[k +1], sep = " ")
k = k+1
entry = cbind(pars = combined, comp = "TRUE")
entries = rbind(entries, entry)
print(entries)
}
else if(k> 1){
entries[k-1, pars] = paste(pars[k-1], pars[k], sep = " ")
entries[k-1, comp] = "TRUE"
}
cand_df = rep(cand, times = length(entries))
term_df = rep(term, times = length(entries))
pars_df = data.table(texts = entries$pars, candidate = cand_df, term = term_df, title = speech_title, comp = entries$comp)}
}
df = rbind(df, pars_df)
}
?rbind
for(i in 1:length(folders)){
path =  paste0("/Users/yuchenluo/Desktop/Measure_RadicalDiscourse/", folders[i])
setwd(path)
all_files = list.files(pattern = "*.txt")
# speech_df = data.table(texts = character(), candidate = character(), term = character(), title = character() )
for (j in 1:length(all_files)){
t <- read_file(all_files[j]) # load file
cand = sub("-speech.*", "", all_files[j])
term = str_match(all_files[j], "speech-\\s*(.*?)\\s*-")[,2]
speech_title = all_files[j]
pars = strsplit(t, "\n")[[1]]
pars = pars[pars != ""] #delete empty paragraphs
pars = sapply(pars,function(x){gsub(" \\[[^][]*]", "", x)}) #delete everything in square brackets and the space before it
for (k in 1:length(pars)){
sents = unlist(tokenize_sentences(pars[k]))
entries = data.table(pars = character(), comp = character())
if (length(sents) >2){
entry = cbind(pars = pars[k], comp = "FALSE")
entries = rbind(entries, entry)
print(entries)
}
else if (k < length(pars)){
combined = paste(pars[k], pars[k +1], sep = " ")
k = k+1
entry = data.table(pars = combined, comp = "TRUE")
entries = rbind(entries, entry)
print(entries)
}
else if(k> 1){
entries[k-1, pars] = paste(pars[k-1], pars[k], sep = " ")
entries[k-1, comp] = "TRUE"
}
cand_df = rep(cand, times = length(entries))
term_df = rep(term, times = length(entries))
pars_df = data.table(texts = entries$pars, candidate = cand_df, term = term_df, title = speech_title, comp = entries$comp)}
}
df = rbind(df, pars_df)
}
for(i in 1:length(folders)){
path =  paste0("/Users/yuchenluo/Desktop/Measure_RadicalDiscourse/", folders[i])
setwd(path)
all_files = list.files(pattern = "*.txt")
# speech_df = data.table(texts = character(), candidate = character(), term = character(), title = character() )
for (j in 1:length(all_files)){
t <- read_file(all_files[j]) # load file
cand = sub("-speech.*", "", all_files[j])
term = str_match(all_files[j], "speech-\\s*(.*?)\\s*-")[,2]
speech_title = all_files[j]
pars = strsplit(t, "\n")[[1]]
pars = pars[pars != ""] #delete empty paragraphs
pars = sapply(pars,function(x){gsub(" \\[[^][]*]", "", x)}) #delete everything in square brackets and the space before it
for (k in 1:length(pars)){
sents = unlist(tokenize_sentences(pars[k]))
entries = data.table(pars = character(), comp = character())
if (length(sents) >2){
entry = cbind(pars = pars[k], comp = "FALSE")
entries = rbind(entries, entry)
print(entries)
}
else if (k < length(pars)){
combined = paste(pars[k], pars[k +1], sep = " ")
k = k+1
entry = data.table(pars = combined, comp = "TRUE")
entries = rbind(entries, entry)
print(entry)
}
else if(k> 1){
entries[k-1, pars] = paste(pars[k-1], pars[k], sep = " ")
entries[k-1, comp] = "TRUE"
}
cand_df = rep(cand, times = length(entries))
term_df = rep(term, times = length(entries))
pars_df = data.table(texts = entries$pars, candidate = cand_df, term = term_df, title = speech_title, comp = entries$comp)}
}
df = rbind(df, pars_df)
}
for(i in 1:length(folders)){
path =  paste0("/Users/yuchenluo/Desktop/Measure_RadicalDiscourse/", folders[i])
setwd(path)
all_files = list.files(pattern = "*.txt")
# speech_df = data.table(texts = character(), candidate = character(), term = character(), title = character() )
for (j in 1:length(all_files)){
t <- read_file(all_files[j]) # load file
cand = sub("-speech.*", "", all_files[j])
term = str_match(all_files[j], "speech-\\s*(.*?)\\s*-")[,2]
speech_title = all_files[j]
pars = strsplit(t, "\n")[[1]]
pars = pars[pars != ""] #delete empty paragraphs
pars = sapply(pars,function(x){gsub(" \\[[^][]*]", "", x)}) #delete everything in square brackets and the space before it
for (k in 1:length(pars)){
sents = unlist(tokenize_sentences(pars[k]))
entries = data.table(pars = character(), comp = character())
if (length(sents) >2){
entry = cbind(pars = pars[k], comp = "FALSE")
entries = rbind(entries, entry)
print(entries)
}
else if (k < length(pars)){
combined = paste(pars[k], pars[k +1], sep = " ")
k = k+1
entry = data.table(pars = combined, comp = "TRUE")
entries = rbind(entries, entry)
print(entry)
}
else if(k> 1){
entries[k-1, pars] = paste(pars[k-1], pars[k], sep = " ")
entries[k-1, comp] = "TRUE"
}
cand_df = rep(cand, times = length(entries))
term_df = rep(term, times = length(entries))
pars_df = data.table(texts = entries$pars, candidate = cand_df, term = term_df, title = speech_title, comp = entries$comp)}
}
df = rbind(df, pars_df)
}
View(entry)
View(entries)
for(i in 1:length(folders)){
path =  paste0("/Users/yuchenluo/Desktop/Measure_RadicalDiscourse/", folders[i])
setwd(path)
all_files = list.files(pattern = "*.txt")
# speech_df = data.table(texts = character(), candidate = character(), term = character(), title = character() )
for (j in 1:length(all_files)){
t <- read_file(all_files[j]) # load file
cand = sub("-speech.*", "", all_files[j])
term = str_match(all_files[j], "speech-\\s*(.*?)\\s*-")[,2]
speech_title = all_files[j]
pars = strsplit(t, "\n")[[1]]
pars = pars[pars != ""] #delete empty paragraphs
pars = sapply(pars,function(x){gsub(" \\[[^][]*]", "", x)}) #delete everything in square brackets and the space before it
for (k in 1:length(pars)){
sents = unlist(tokenize_sentences(pars[k]))
entries = data.table(pars = character(), comp = character())
if (length(sents) >2){
entry = cbind(pars = pars[k], comp = "FALSE")
entries = rbind(entries, entry)
print(entries)
}
else if (k < length(pars)){
combined = paste(pars[k], pars[k +1], sep = " ")
k = k+1
entry = data.table(pars = combined, comp = "TRUE")
entries = cbind(entries, entry)
print(entry)
}
else if(k> 1){
entries[k-1, pars] = paste(pars[k-1], pars[k], sep = " ")
entries[k-1, comp] = "TRUE"
}
cand_df = rep(cand, times = length(entries))
term_df = rep(term, times = length(entries))
pars_df = data.table(texts = entries$pars, candidate = cand_df, term = term_df, title = speech_title, comp = entries$comp)}
}
df = rbind(df, pars_df)
}
View(entries)
df_new[1]
df_new[1:2, texts]
df_new[1:2]
